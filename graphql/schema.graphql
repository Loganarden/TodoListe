"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    """
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    """
    taches: [Tache!]! @all
    tache(id: ID @eq): Tache @find
    taches: [Taches!]@paginate
}
"""
type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}
"""
type Tache {
    id: iD!
    titre: String!
    description:  longText!
    date: date!
}

type Mutation{
    createTache(
        titre: String!
        description: longText!
        date: date!
    ) : Tache! @create

    updateTache(
        id: ID!
        name: String!
        description: longText!
        date: date!
    ) : Tache! @update

    deleteTache(
        id: ID!
    ) : TAche @delete
}

'schemas' => [
    'default' => [
        'query' => [
            //retrieve a single tache
            'tache' => App\GraphQL\TacheQuery::class,
            //retrieve a collection of taches
            'taches' => App\GraphQL\TachesQuery::class,
        ],
        'mutation' => [
            //create a tache
            'createTache' => App\GraphQL\CreateTacheMutation::class,
            //update a tache
            'updateTache' => App\GraphQL\UpdateTacheMutation::class,
            //delete a tache
            'deleteTache' => App\GraphQL\DeleteTacheMutation::class,
        ],
        'middleware' => []
    ],
],
'types' => [
    //tache type definition
    'Tache' => App\GraphQL\TacheType::class,
],
